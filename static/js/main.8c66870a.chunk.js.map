{"version":3,"sources":["lib/utility.js","context.js","components/Toolbar.js","components/ToggleSwitch.js","components/AddForm.js","components/CreatureTracker.js","components/InitList.js","components/App.js","reportWebVitals.js","index.js"],"names":["initiativeSort","a","b","init","isPlayer","rollInit","mod","d","Math","floor","random","InitContext","React","createContext","currId","InitProvider","children","useState","initiative","setInitiative","turnMarkerRef","useRef","index","id","turnMarkerData","setTurnMarkerData","calculateTrackerPosition","length","current","style","transform","useEffect","console","log","newIndex","findIndex","creature","Provider","value","addToOrder","creaturesToAdd","map","sort","resetInit","removeFromOrder","filter","changeName","newName","item","name","changeHP","newHP","HP","useInitContext","useContext","Toolbar","isPrerolling","togglePrerolling","numPrerolledMonsters","setNumPrerolledMonsters","preRollInitMod","setPreRollInitMod","preRollHP","setPreRollHP","prerollInputRef","focus","className","onClick","onSubmit","e","preventDefault","listToAdd","i","push","htmlFor","type","ref","onChange","parseInt","target","onFocus","select","ToggleSwitch","checked","AddForm","togglePlayer","creatureName","setCreatureName","creatureInit","setCreatureInit","creatureHP","setCreatureHP","CreatureTracker","fontWeight","min","InitList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iWAAO,SAASA,EAAeC,EAAGC,GAEjC,OAAa,IADAA,EAAEC,KAAOF,EAAEE,KAEnBF,EAAEG,UACG,EAELF,EAAEE,SACE,EAED,EAEDF,EAAEC,KAAOF,EAAEE,KAOZ,SAASE,EAASC,GACxB,OAAOA,GALiBC,EAKF,GAJf,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,IADhC,IAAkBA,ECVzB,IAAMI,EAAcC,IAAMC,gBAEtBC,EAAS,EAEAC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTC,mBAAS,IADA,mBACtCC,EADsC,KAC1BC,EAD0B,KAGvCC,EAAgBC,iBAAO,MAHgB,EAKDJ,mBAAS,CACpDK,MAAO,EACPC,GAAIL,EAAW,KAP6B,mBAKtCM,EALsC,KAKtBC,EALsB,KAU7C,SAASC,EAAyBJ,GACjC,GAA0B,IAAtBJ,EAAWS,OAKf,OADAF,EAAkB,CAAEH,MAAOA,EAAOC,GAAIL,EAAWI,GAAOC,KAChDH,EAAcQ,QAAQC,MAAMC,UAA5B,qBACP,KAAO,GAAKR,EADL,OAJPG,EAAkB,CAAEH,MAAO,EAAGC,GAAI,IA2DpC,OATAQ,qBAAU,WACTC,QAAQC,IAAI,aACZ,IAAMC,EAAWhB,EAAWiB,WAC3B,SAACC,GAAD,OAAcA,EAASb,KAAOC,EAAeD,MAE1CW,IAAaV,EAAeF,OAASY,EAAW,GACpDR,EAAyBQ,KACvB,CAAChB,EAAYM,IAGf,cAACb,EAAY0B,SAAb,CACCC,MAAO,CACNpB,aACAM,iBACAJ,gBACAmB,WAxDH,SAAoBC,GACnBrB,EACC,sBACID,GADJ,YAEIsB,EAAeC,KAAI,SAACL,GAAD,mBAAC,eAAmBA,GAApB,IAA8Bb,KAAMT,SACzD4B,KAAK1C,KAoDN2C,UAtBH,WACCxB,EAAc,IACdM,EAAkB,CAAEH,MAAO,EAAGC,GAAI,IAClCG,EAAyB,IAoBvBkB,gBAjDH,SAAyBrB,GACxBJ,EAAcD,EAAW2B,QAAO,SAACT,GAAD,OAAcA,EAASb,KAAOA,OAiD5DuB,WA9CH,SAAoBvB,EAAIwB,GACvB5B,EACCD,EAAWuB,KAAI,SAACO,GACf,OAAIA,EAAKzB,KAAOA,EACR,2BAAKyB,GAAZ,IAAkBC,KAAMF,IAElBC,OAyCPE,SApCH,SAAkB3B,EAAI4B,GACrBhC,EACCD,EAAWuB,KAAI,SAACO,GACf,OAAIA,EAAKzB,KAAOA,EACR,2BAAKyB,GAAZ,IAAkBI,GAAID,IAEhBH,OA+BPtB,4BAVF,SAYEV,KAKG,SAASqC,IACf,OAAOC,qBAAW3C,G,UC3FN4C,EAAU,WAAO,IAAD,EAOxBF,IALHd,EAF2B,EAE3BA,WACAI,EAH2B,EAG3BA,UACAzB,EAJ2B,EAI3BA,WACAM,EAL2B,EAK3BA,eACAE,EAN2B,EAM3BA,yBAN2B,EASaT,oBAAS,GATtB,mBASrBuC,EATqB,KASPC,EATO,OAU4BxC,mBAAS,GAVrC,mBAUrByC,EAVqB,KAUCC,EAVD,OAWgB1C,mBAAS,GAXzB,mBAWrB2C,EAXqB,KAWLC,EAXK,OAYM5C,mBAAS,GAZf,mBAYrB6C,EAZqB,KAYVC,EAZU,KActBC,EAAkB3C,iBAAO,MA2C/B,OA3BAU,qBAAU,WACLyB,GACHQ,EAAgBpC,QAAQqC,UAEvB,CAACT,IAwBH,yBAAQU,UAAU,cAAlB,UACC,sDACA,sBAAKA,UAAU,UAAf,UACC,qBAAKA,UAAU,wBAAf,SACC,wBAAQA,UAAU,wBAAwBC,QAASxB,EAAnD,gCAKD,qBAAKuB,UAAU,wBAAf,SACC,wBAAQA,UAAU,0BAA0BC,QApDhD,WACC,GAA0B,IAAtBjD,EAAWS,OAAf,CADsB,IAKlBO,EADcV,EAAVF,MACe,EAEnBY,GAAYhB,EAAWS,SAC1BO,EAAW,GAGZR,EAAyBQ,KAyCtB,2BAKD,qBAAKgC,UAAU,wBAAf,SACC,wBACCA,UAAU,0BACVC,QAxCL,WACCV,GAAkBD,IAqCf,kCAMD,qBAAKU,UAAS,gBAAWV,EAAe,GAAK,UAA7C,SACC,uBAAMU,UAAU,eAAeE,SAzCnC,SAAyBC,GACxBA,EAAEC,iBAEF,IADA,IAAMC,EAAY,GACTC,EAAI,EAAGA,EAAId,EAAsBc,IACzCD,EAAUE,KAAK,CACdxB,KAAK,WAAD,OAAauB,EAAI,GACrBrE,KAAME,EAASuD,GACfR,GAAIU,EACJ1D,UAAU,IAGZmC,EAAWgC,GACXZ,EAAwB,GACxBE,EAAkB,GAClBJ,GAAiB,IA2Bd,UACC,oDACA,wBACCS,UAAU,gBACVC,QAAS,kBAAMV,GAAiB,IAFjC,SAGC,cAAC,IAAD,MACS,IACV,sBAAKS,UAAU,kBAAf,UACC,uBAAOQ,QAAQ,cAAf,gCACA,uBACCR,UAAU,sBACVS,KAAK,SACL1B,KAAK,cACL1B,GAAG,cACHqD,IAAKZ,EACL1B,MAAOoB,EACPmB,SAAU,SAACR,GAAD,OACTV,EAAwBmB,SAAST,EAAEU,OAAOzC,SAE3C0C,QAAS,SAACX,GAAD,OAAOA,EAAEU,OAAOE,eAG3B,sBAAKf,UAAU,kBAAf,UACC,uBAAOQ,QAAQ,UAAf,iCACA,uBACCR,UAAU,sBACVS,KAAK,SACL1B,KAAK,UACL1B,GAAG,UACHe,MAAOsB,EACPiB,SAAU,SAACR,GAAD,OAAOR,EAAkBiB,SAAST,EAAEU,OAAOzC,SACrD0C,QAAS,SAACX,GAAD,OAAOA,EAAEU,OAAOE,eAG3B,sBAAKf,UAAU,kBAAf,UACC,uBAAOQ,QAAQ,YAAf,oBACA,uBACCR,UAAU,sBACVS,KAAK,SACL1B,KAAK,YACL1B,GAAG,YACHe,MAAOwB,EACPe,SAAU,SAACR,GAAD,OAAON,EAAae,SAAST,EAAEU,OAAOzC,SAChD0C,QAAS,SAACX,GAAD,OAAOA,EAAEU,OAAOE,eAG3B,uBACCf,UAAU,iBACVS,KAAK,SACLrC,MAAM,+BCrIA4C,G,MAAe,SAAC,GAAiC,IAA/BjC,EAA8B,EAA9BA,KAAMkC,EAAwB,EAAxBA,QAASN,EAAe,EAAfA,SAC7C,OACC,sBAAKX,UAAU,gBAAf,UACC,uBACCS,KAAK,WACLT,UAAU,yBACVjB,KAAMA,EACN1B,GAAI0B,EACJkC,QAASA,EACTN,SAAUA,IAEX,wBAAOX,UAAU,sBAAsBQ,QAASzB,EAAhD,UACC,sBAAMiB,UAAU,wBAChB,sBAAMA,UAAU,iCCVPkB,G,MAAU,WAAO,IACrB7C,EAAec,IAAfd,WADoB,EAGKtB,oBAAS,GAHd,mBAGrBb,EAHqB,KAGXiF,EAHW,OAIYpE,mBAAS,IAJrB,mBAIrBqE,EAJqB,KAIPC,EAJO,OAKYtE,mBAAS,GALrB,mBAKrBuE,EALqB,KAKPC,EALO,OAMQxE,mBAAS,GANjB,mBAMrByE,EANqB,KAMTC,EANS,KAoB5B,OACC,sBAAKzB,UAAU,iBAAf,UACC,mDACmB,IAClB,cAAC,EAAD,CACCjB,KAAK,gBACLkC,QAAS/E,EACTyE,SAAU,kBAAMQ,GAAcjF,SAGhC,uBAAM8D,UAAU,WAAWE,SAtB7B,SAAmBC,GAClBA,EAAEC,iBAEF/B,EAAW,CACV,CAAEU,KAAMqC,EAAcnF,KAAMqF,EAAcpC,GAAIsC,EAAYtF,cAG3DmF,EAAgB,IAChBE,EAAgB,GAChBE,EAAc,IAab,UACC,sBAAKzB,UAAU,aAAf,UACC,uBAAOQ,QAAQ,GAAf,+BACA,uBACCR,UAAU,kBACVS,KAAK,OACLrC,MAAOgD,EACPT,SAAU,SAACR,GAAD,OAAOkB,EAAgBlB,EAAEU,OAAOzC,QAC1C0C,QAAS,SAACX,GAAD,OAAOA,EAAEU,OAAOE,eAI3B,sBAAKf,UAAU,0BAAf,UACC,uBAAOQ,QAAQ,GAAf,yBACA,uBACCR,UAAU,kBACVS,KAAK,SACLrC,MAAOkD,EACPX,SAAU,SAACR,GAAD,OAAOoB,EAAgBX,SAAST,EAAEU,OAAOzC,SACnD0C,QAAS,SAACX,GAAD,OAAOA,EAAEU,OAAOE,gBAIzB7E,GACD,sBAAK8D,UAAU,0BAAf,UACC,uBAAOQ,QAAQ,GAAf,iBACA,uBACCR,UAAU,kBACVS,KAAK,SACLrC,MAAOoD,EACPb,SAAU,SAACR,GAAD,OAAOsB,EAAcb,SAAST,EAAEU,OAAOzC,SACjD0C,QAAS,SAACX,GAAD,OAAOA,EAAEU,OAAOE,eAK5B,uBAAOf,UAAU,YAAYS,KAAK,SAASrC,MAAM,mBCpExCsD,G,MAAkB,SAAC,GAAkB,IAAhBxD,EAAe,EAAfA,SACzBjC,EAAiCiC,EAAjCjC,KAAM8C,EAA2Bb,EAA3Ba,KAAM7C,EAAqBgC,EAArBhC,SAAUgD,EAAWhB,EAAXgB,GAAI7B,EAAOa,EAAPb,GADc,EAEE8B,IAA1CH,EAFwC,EAExCA,SAAUJ,EAF8B,EAE9BA,WAAYF,EAFkB,EAElBA,gBAY9B,OACC,sBAAKsB,UAAS,wBAAmB9D,EAAW,SAAW,YAAvD,UACC,qBAAK8D,UAAU,cAAf,SAA8B/D,IAC9B,uBACCwE,KAAK,OACL1B,KAAK,gBACLiB,UAAU,mCACV5B,MAAOW,EACP4B,SAAU,SAACR,GAAD,OAAOvB,EAAWvB,EAAI8C,EAAEU,OAAOzC,WAExClC,GACD,qCACC,uBAAOsE,QAAQ,cAAc7C,MAAO,CAAEgE,WAAY,UAAlD,gBAGA,uBACClB,KAAK,SACL1B,KAAK,cACL6C,IAAI,IACJ5B,UAAU,2BACV5B,MAAOc,EACPyB,SA/BL,SAAwBR,GACvB,IAAMlB,EAAQ2B,SAAST,EAAEU,OAAOzC,OAEhC,GAAIa,GAAS,EACZ,OAAOP,EAAgBrB,GAGxB2B,EAAS3B,EAAI4B,cCTF4C,G,MAAW,WAAO,IAAD,EACS1C,IAA9BnC,EADqB,EACrBA,WAAYE,EADS,EACTA,cAEpB,OACC,sBAAK8C,UAAU,iBAAf,UACC,iDACA,qBACCA,UAAS,sBAAiBhD,EAAWS,OAAS,EAAI,GAAK,UACvDiD,IAAKxD,IACLF,EAAWuB,KAAI,SAACL,GAAD,OACf,cAAC,EAAD,CAECA,SAAUA,GAFX,UACSA,EAAShC,SAAW,SAAW,UADxC,YACqDgC,EAASb,a,MCKnDyE,MAdf,WACC,OACC,qBAAK9B,UAAU,MAAf,SACC,eAAC,EAAD,WACC,cAAC,EAAD,IACA,sBAAKA,UAAU,mBAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,aCJU+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.8c66870a.chunk.js","sourcesContent":["export function initiativeSort(a, b) {\r\n\tconst diff = b.init - a.init;\r\n\tif (diff === 0) {\r\n\t\tif (a.isPlayer) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (b.isPlayer) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\treturn b.init - a.init;\r\n}\r\n\r\nexport function rollDice(d) {\r\n\treturn 1 + Math.floor(Math.random() * d);\r\n}\r\n\r\nexport function rollInit(mod) {\r\n\treturn mod + rollDice(20);\r\n}\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n\r\nimport { initiativeSort } from './lib/utility';\r\n\r\nconst InitContext = React.createContext();\r\n\r\nlet currId = 0;\r\n\r\nexport const InitProvider = ({ children }) => {\r\n\tconst [initiative, setInitiative] = useState([]);\r\n\r\n\tconst turnMarkerRef = useRef(null);\r\n\r\n\tconst [turnMarkerData, setTurnMarkerData] = useState({\r\n\t\tindex: 0,\r\n\t\tid: initiative[0],\r\n\t});\r\n\r\n\tfunction calculateTrackerPosition(index) {\r\n\t\tif (initiative.length === 0) {\r\n\t\t\tsetTurnMarkerData({ index: 0, id: 0 });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetTurnMarkerData({ index: index, id: initiative[index].id });\r\n\t\treturn (turnMarkerRef.current.style.transform = `translateY(${\r\n\t\t\t49.5 + 50 * index\r\n\t\t}px)`);\r\n\t}\r\n\r\n\tfunction addToOrder(creaturesToAdd) {\r\n\t\tsetInitiative(\r\n\t\t\t[\r\n\t\t\t\t...initiative,\r\n\t\t\t\t...creaturesToAdd.map((creature) => ({ ...creature, id: ++currId })),\r\n\t\t\t].sort(initiativeSort)\r\n\t\t);\r\n\t}\r\n\r\n\tfunction removeFromOrder(id) {\r\n\t\tsetInitiative(initiative.filter((creature) => creature.id !== id));\r\n\t}\r\n\r\n\tfunction changeName(id, newName) {\r\n\t\tsetInitiative(\r\n\t\t\tinitiative.map((item) => {\r\n\t\t\t\tif (item.id === id) {\r\n\t\t\t\t\treturn { ...item, name: newName };\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tfunction changeHP(id, newHP) {\r\n\t\tsetInitiative(\r\n\t\t\tinitiative.map((item) => {\r\n\t\t\t\tif (item.id === id) {\r\n\t\t\t\t\treturn { ...item, HP: newHP };\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tfunction resetInit() {\r\n\t\tsetInitiative([]);\r\n\t\tsetTurnMarkerData({ index: 0, id: 0 });\r\n\t\tcalculateTrackerPosition(0);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('reloading');\r\n\t\tconst newIndex = initiative.findIndex(\r\n\t\t\t(creature) => creature.id === turnMarkerData.id\r\n\t\t);\r\n\t\tif (newIndex === turnMarkerData.index || newIndex < 0) return;\r\n\t\tcalculateTrackerPosition(newIndex);\r\n\t}, [initiative, turnMarkerData]);\r\n\r\n\treturn (\r\n\t\t<InitContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tinitiative,\r\n\t\t\t\tturnMarkerData,\r\n\t\t\t\tturnMarkerRef,\r\n\t\t\t\taddToOrder,\r\n\t\t\t\tresetInit,\r\n\t\t\t\tremoveFromOrder,\r\n\t\t\t\tchangeName,\r\n\t\t\t\tchangeHP,\r\n\t\t\t\tcalculateTrackerPosition,\r\n\t\t\t}}>\r\n\t\t\t{children}\r\n\t\t</InitContext.Provider>\r\n\t);\r\n};\r\n\r\nexport function useInitContext() {\r\n\treturn useContext(InitContext);\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport { useInitContext } from '../context';\r\nimport { rollInit } from '../lib/utility';\r\n\r\nimport '../styles/Toolbar.css';\r\n\r\nexport const Toolbar = () => {\r\n\tconst {\r\n\t\taddToOrder,\r\n\t\tresetInit,\r\n\t\tinitiative,\r\n\t\tturnMarkerData,\r\n\t\tcalculateTrackerPosition,\r\n\t} = useInitContext();\r\n\r\n\tconst [isPrerolling, togglePrerolling] = useState(false);\r\n\tconst [numPrerolledMonsters, setNumPrerolledMonsters] = useState(1);\r\n\tconst [preRollInitMod, setPreRollInitMod] = useState(0);\r\n\tconst [preRollHP, setPreRollHP] = useState(1);\r\n\r\n\tconst prerollInputRef = useRef(null);\r\n\r\n\tfunction advanceTurn() {\r\n\t\tif (initiative.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst { index } = turnMarkerData;\r\n\t\tlet newIndex = index + 1;\r\n\r\n\t\tif (newIndex >= initiative.length) {\r\n\t\t\tnewIndex = 0;\r\n\t\t}\r\n\r\n\t\tcalculateTrackerPosition(newIndex);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isPrerolling) {\r\n\t\t\tprerollInputRef.current.focus();\r\n\t\t}\r\n\t}, [isPrerolling]);\r\n\r\n\tfunction handlePrerollClick() {\r\n\t\ttogglePrerolling(!isPrerolling);\r\n\t}\r\n\r\n\tfunction prerollMonsters(e) {\r\n\t\te.preventDefault();\r\n\t\tconst listToAdd = [];\r\n\t\tfor (let i = 0; i < numPrerolledMonsters; i++) {\r\n\t\t\tlistToAdd.push({\r\n\t\t\t\tname: `monster ${i + 1}`,\r\n\t\t\t\tinit: rollInit(preRollInitMod),\r\n\t\t\t\tHP: preRollHP,\r\n\t\t\t\tisPlayer: false,\r\n\t\t\t});\r\n\t\t}\r\n\t\taddToOrder(listToAdd);\r\n\t\tsetNumPrerolledMonsters(1);\r\n\t\tsetPreRollInitMod(0);\r\n\t\ttogglePrerolling(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header className=\"init-header\">\r\n\t\t\t<h1>Roll For Initiative!</h1>\r\n\t\t\t<nav className=\"toolbar\">\r\n\t\t\t\t<div className=\"toolbar-btn-container\">\r\n\t\t\t\t\t<button className=\"toolbar-btn reset-btn\" onClick={resetInit}>\r\n\t\t\t\t\t\tReset Initiative\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"toolbar-btn-container\">\r\n\t\t\t\t\t<button className=\"toolbar-btn advance-btn\" onClick={advanceTurn}>\r\n\t\t\t\t\t\tFinish Turn\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"toolbar-btn-container\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"toolbar-btn preroll-btn\"\r\n\t\t\t\t\t\tonClick={handlePrerollClick}>\r\n\t\t\t\t\t\tBatch-add Monsters\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={`modal ${isPrerolling ? '' : 'hidden'}`}>\r\n\t\t\t\t\t<form className=\"preroll-form\" onSubmit={prerollMonsters}>\r\n\t\t\t\t\t\t<h3>Monster pre-roller</h3>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"close-preroll\"\r\n\t\t\t\t\t\t\tonClick={() => togglePrerolling(false)}>\r\n\t\t\t\t\t\t\t<FaTimes />\r\n\t\t\t\t\t\t</button>{' '}\r\n\t\t\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"numMonsters\">How Many Monsters?</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"input preroll-input\"\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tname=\"numMonsters\"\r\n\t\t\t\t\t\t\t\tid=\"numMonsters\"\r\n\t\t\t\t\t\t\t\tref={prerollInputRef}\r\n\t\t\t\t\t\t\t\tvalue={numPrerolledMonsters}\r\n\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\tsetNumPrerolledMonsters(parseInt(e.target.value))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonFocus={(e) => e.target.select()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"initMod\">Initiative Modifier</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"input preroll-input\"\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tname=\"initMod\"\r\n\t\t\t\t\t\t\t\tid=\"initMod\"\r\n\t\t\t\t\t\t\t\tvalue={preRollInitMod}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPreRollInitMod(parseInt(e.target.value))}\r\n\t\t\t\t\t\t\t\tonFocus={(e) => e.target.select()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"input-container\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"preRollHP\">Max HP</label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"input preroll-input\"\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tname=\"preRollHP\"\r\n\t\t\t\t\t\t\t\tid=\"preRollHP\"\r\n\t\t\t\t\t\t\t\tvalue={preRollHP}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPreRollHP(parseInt(e.target.value))}\r\n\t\t\t\t\t\t\t\tonFocus={(e) => e.target.select()}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"preroll-submit\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvalue=\"Roll monsters!\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport '../styles/Toggle.css';\r\n\r\nexport const ToggleSwitch = ({ name, checked, onChange }) => {\r\n\treturn (\r\n\t\t<div className=\"toggle-switch\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tclassName=\"toggle-switch-checkbox\"\r\n\t\t\t\tname={name}\r\n\t\t\t\tid={name}\r\n\t\t\t\tchecked={checked}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<label className=\"toggle-switch-label\" htmlFor={name}>\r\n\t\t\t\t<span className=\"toggle-switch-inner\" />\r\n\t\t\t\t<span className=\"toggle-switch-switch\" />\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { ToggleSwitch } from './ToggleSwitch';\r\n\r\nimport '../styles/Form.css';\r\nimport { useInitContext } from '../context';\r\n\r\nexport const AddForm = () => {\r\n\tconst { addToOrder } = useInitContext();\r\n\r\n\tconst [isPlayer, togglePlayer] = useState(false);\r\n\tconst [creatureName, setCreatureName] = useState('');\r\n\tconst [creatureInit, setCreatureInit] = useState(1);\r\n\tconst [creatureHP, setCreatureHP] = useState(1);\r\n\r\n\tfunction addToInit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\taddToOrder([\r\n\t\t\t{ name: creatureName, init: creatureInit, HP: creatureHP, isPlayer },\r\n\t\t]);\r\n\r\n\t\tsetCreatureName('');\r\n\t\tsetCreatureInit(1);\r\n\t\tsetCreatureHP(1);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"form-container\">\r\n\t\t\t<h2>\r\n\t\t\t\tAdd To Initiative{' '}\r\n\t\t\t\t<ToggleSwitch\r\n\t\t\t\t\tname=\"Creature Type\"\r\n\t\t\t\t\tchecked={isPlayer}\r\n\t\t\t\t\tonChange={() => togglePlayer(!isPlayer)}\r\n\t\t\t\t/>\r\n\t\t\t</h2>\r\n\t\t\t<form className=\"add-form\" onSubmit={addToInit}>\r\n\t\t\t\t<div className=\"form-input\">\r\n\t\t\t\t\t<label htmlFor=\"\">Name of Creature:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"input add-input\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={creatureName}\r\n\t\t\t\t\t\tonChange={(e) => setCreatureName(e.target.value)}\r\n\t\t\t\t\t\tonFocus={(e) => e.target.select()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"form-input number-input\">\r\n\t\t\t\t\t<label htmlFor=\"\">Initiative:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName=\"input add-input\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tvalue={creatureInit}\r\n\t\t\t\t\t\tonChange={(e) => setCreatureInit(parseInt(e.target.value))}\r\n\t\t\t\t\t\tonFocus={(e) => e.target.select()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{!isPlayer && (\r\n\t\t\t\t\t<div className=\"form-input number-input\">\r\n\t\t\t\t\t\t<label htmlFor=\"\">HP:</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"input add-input\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tvalue={creatureHP}\r\n\t\t\t\t\t\t\tonChange={(e) => setCreatureHP(parseInt(e.target.value))}\r\n\t\t\t\t\t\t\tonFocus={(e) => e.target.select()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<input className=\"add-input\" type=\"submit\" value=\"Submit\" />\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useInitContext } from '../context';\r\n\r\nimport '../styles/Tracker.css';\r\n\r\nexport const CreatureTracker = ({ creature }) => {\r\n\tconst { init, name, isPlayer, HP, id } = creature;\r\n\tconst { changeHP, changeName, removeFromOrder } = useInitContext();\r\n\r\n\tfunction handleHPChange(e) {\r\n\t\tconst newHP = parseInt(e.target.value);\r\n\r\n\t\tif (newHP <= 0) {\r\n\t\t\treturn removeFromOrder(id);\r\n\t\t}\r\n\r\n\t\tchangeHP(id, newHP);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`init-creature ${isPlayer ? 'player' : 'creature'}`}>\r\n\t\t\t<div className=\"init-number\">{init}</div>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"Creature Name\"\r\n\t\t\t\tclassName=\"pretty-input creature-name-input\"\r\n\t\t\t\tvalue={name}\r\n\t\t\t\tonChange={(e) => changeName(id, e.target.value)}\r\n\t\t\t/>\r\n\t\t\t{!isPlayer && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<label htmlFor=\"Creature HP\" style={{ fontWeight: 'normal' }}>\r\n\t\t\t\t\t\tHP\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tname=\"Creature HP\"\r\n\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\tclassName=\"pretty-input creature-hp\"\r\n\t\t\t\t\t\tvalue={HP}\r\n\t\t\t\t\t\tonChange={handleHPChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport { CreatureTracker } from './CreatureTracker';\r\nimport { useInitContext } from '../context';\r\n\r\nimport '../styles/List.css';\r\n\r\nexport const InitList = () => {\r\n\tconst { initiative, turnMarkerRef } = useInitContext();\r\n\r\n\treturn (\r\n\t\t<div className=\"list-container\">\r\n\t\t\t<h2>Initiative List</h2>\r\n\t\t\t<div\r\n\t\t\t\tclassName={`turn-marker ${initiative.length > 0 ? '' : 'hidden'}`}\r\n\t\t\t\tref={turnMarkerRef}></div>\r\n\t\t\t{initiative.map((creature) => (\r\n\t\t\t\t<CreatureTracker\r\n\t\t\t\t\tkey={`${creature.isPlayer ? 'player' : 'monster'}-${creature.id}`}\r\n\t\t\t\t\tcreature={creature}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\n\nimport { Toolbar } from './Toolbar';\nimport { AddForm } from './AddForm';\nimport { InitList } from './InitList';\n\nimport '../styles/App.css';\nimport { InitProvider } from '../context';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<InitProvider>\n\t\t\t\t<Toolbar />\n\t\t\t\t<div className=\"initiave-tracker\">\n\t\t\t\t\t<AddForm />\n\t\t\t\t\t<InitList />\n\t\t\t\t</div>\n\t\t\t</InitProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}